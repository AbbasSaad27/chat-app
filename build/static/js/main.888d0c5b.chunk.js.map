{"version":3,"sources":["firebase/firebase.utils.js","components/custom-btn/custom-btn.component.jsx","components/message/message.component.jsx","components/chat-ui/chat-ui.component.jsx","components/sign-in-component/sign-in-component.jsx","App.js","reportWebVitals.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","auth","firestore","googleProvider","GoogleAuthProvider","setCustomParameters","user","faceBookProvider","FacebookAuthProvider","serverTimestamp","FieldValue","createProfileDocument","userAuth","a","userRef","doc","uid","get","exists","displayName","email","photoURL","set","createdAt","createNewMessage","message","messagasDbRef","collection","add","text","signInWithGoogle","signInWithPopup","signInWithFaceBook","signInWithRedirect","CustomBtn","children","classname","func","type","className","onClick","Message","photoclass","src","alt","ChatUi","docs","useState","setMessage","messagesArr","setMessagesArr","dummy","useRef","useEffect","current","scrollIntoView","behavior","handleSubmit","e","preventDefault","orderBy","limitToLast","onSnapshot","messageList","signOut","map","messageSnap","data","id","ref","onSubmit","name","placeholder","value","onChange","target","required","SignIn","App","setUser","setData","unsubscribe","onAuthStateChanged","then","userSnap","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.888d0c5b.chunk.js","sourcesContent":["import firebase from 'firebase/app';\r\nimport 'firebase/auth';\r\nimport 'firebase/firestore';\r\n\r\nconst app = {\r\n    apiKey: \"AIzaSyAC_mfgYDLtAR_zhrZYPjhIL5Puqz7Wtuc\",\r\n    authDomain: \"chat-app-fe69c.firebaseapp.com\",\r\n    projectId: \"chat-app-fe69c\",\r\n    storageBucket: \"chat-app-fe69c.appspot.com\",\r\n    messagingSenderId: \"22233064636\",\r\n    appId: \"1:22233064636:web:1798f7636f735bb1e65cb9\",\r\n    measurementId: \"G-N3JDJGP02N\"\r\n};\r\n\r\n// initialize app\r\nfirebase.initializeApp(app);\r\n\r\n// referencing these and exporting \r\nexport const auth = firebase.auth()\r\nexport const firestore = firebase.firestore();\r\n\r\n\r\n// auth provider\r\nconst googleProvider = new firebase.auth.GoogleAuthProvider()\r\ngoogleProvider.setCustomParameters({\r\n    'prompt': 'select_account'\r\n})\r\n\r\nconst faceBookProvider = new firebase.auth.FacebookAuthProvider();\r\n\r\n\r\n//current time \r\nconst { serverTimestamp } = firebase.firestore.FieldValue;\r\nlet user;\r\n\r\n\r\n//adding user to database\r\nexport const createProfileDocument = async(userAuth) => {\r\n    if(!userAuth) return;\r\n\r\n    user = userAuth;\r\n    const userRef = firestore.doc(`users/${userAuth.uid}`);\r\n    const userSnap = await userRef.get();\r\n\r\n    if(!userSnap.exists) {\r\n        const {displayName, email, photoURL} = userAuth;\r\n        userRef.set({\r\n            displayName,\r\n            email,\r\n            photoURL,\r\n            createdAt: serverTimestamp()\r\n        })\r\n    }\r\n    return userRef;\r\n}\r\nexport const createNewMessage = async(message) => {\r\n    const messagasDbRef = firestore.collection('messages');\r\n\r\n    messagasDbRef.add({\r\n        uid: user.uid,\r\n        text:message,\r\n        photoURL: user.photoURL,\r\n        createdAt: serverTimestamp()\r\n    })\r\n    return messagasDbRef;\r\n}\r\n\r\n//sign in methods\r\nexport const signInWithGoogle = () => auth.signInWithPopup(googleProvider);\r\nexport const signInWithFaceBook = () => auth.signInWithRedirect(faceBookProvider);","import React from 'react';\r\nimport './custom-btn.styles.css';\r\n\r\nconst CustomBtn = ({children, classname, func, type}) => {\r\n    return (\r\n            <button type={`${type? type : 'button'}`} className={`btn ${classname ? classname : ''}`} onClick={func}>{children}</button>\r\n    );\r\n}\r\n \r\nexport default CustomBtn;","import React from 'react';\r\nimport './message.styles.css';\r\n\r\n\r\nconst Message = ({children, photoURL, classname, photoclass}) => {\r\n    return (\r\n        <div className=\"message-container\">\r\n            <img className={`userPhoto ${photoclass} `} src={`${photoURL}`} alt=\"userphoto\" />\r\n            <div className={`message ${classname}`}>\r\n                <p className=\"text\">{children}</p>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n \r\nexport default Message;","import React, { useEffect, useRef, useState } from 'react'\r\nimport { auth, createNewMessage } from '../../firebase/firebase.utils'\r\nimport CustomBtn from '../custom-btn/custom-btn.component'\r\nimport Message from '../message/message.component'\r\nimport './chat-ui.styles.css'\r\n\r\nconst ChatUi = ({user, docs}) => {\r\n\r\n    const [message, setMessage] = useState('');\r\n    const [messagesArr, setMessagesArr] = useState(docs);\r\n\r\n    const dummy = useRef(null);\r\n\r\n    useEffect(() => {\r\n        dummy.current.scrollIntoView({behavior: 'smooth'})\r\n    }, [messagesArr])\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        let messegasDbRef = await createNewMessage(message);\r\n        messegasDbRef.orderBy('createdAt', 'asc').limitToLast(35).onSnapshot(messageList => {\r\n            const docs = messageList.docs;\r\n            setMessagesArr(docs);\r\n        })\r\n        \r\n        setMessage('')\r\n    }\r\n    const handleChange = (e) => {\r\n        setMessage(e.target.value);\r\n    }\r\n\r\n    return (\r\n        <div className='chat-ui'>\r\n            <header className=\"head\">\r\n                <div className=\"user-info\">\r\n                    <img className=\"userPhoto user-pic\" src={`${user.photoURL}`} alt=\"userPhoto\" />\r\n                    <p className=\"user-name\">Logged in as {user.displayName}</p></div>\r\n                <CustomBtn func={() => auth.signOut()} classname=\"ui-btn ui-btn-top\">Sign Out</CustomBtn>\r\n            </header>\r\n            <main className=\"message-box\">\r\n                {messagesArr[0] ? messagesArr.map((messageSnap) => {\r\n                    const data = messageSnap.data()\r\n                    return (\r\n                        <Message key={messageSnap.id} photoURL={data.photoURL} classname={data.uid === user.uid ? 'own' : 'other'} photoclass={data.uid === user.uid ? 'self-user' : 'other-user'}>{data.text}</Message>\r\n                    )\r\n                }) : ''}\r\n                <div className=\"dummy\" ref={dummy}></div>\r\n            </main>\r\n            <footer className=\"send-message\">\r\n                <form className=\"message-form\" onSubmit={handleSubmit}>\r\n                    <textarea\r\n                    type=\"text\"\r\n                    name=\"message\"\r\n                    placeholder=\"Type a message\"\r\n                    value={message}\r\n                    onChange={handleChange}\r\n                    className='typer'\r\n                    required \r\n                    ></textarea>\r\n                    <CustomBtn type=\"submit\" classname=\"ui-btn ui-btn-bottom\">Send</CustomBtn>\r\n                </form>\r\n            </footer>\r\n        </div>\r\n    );\r\n}\r\n \r\nexport default ChatUi;","import React from 'react';\r\nimport { signInWithFaceBook, signInWithGoogle } from '../../firebase/firebase.utils';\r\nimport CustomBtn from '../custom-btn/custom-btn.component';\r\nimport './sign-in-styles.css';\r\n\r\nconst SignIn = () => {\r\n    return (\r\n        <div className=\"sign-in\">\r\n            <h1 className=\"title\">Can't think of a Name</h1>\r\n            <span className=\"sub-title\">Sign in to chat</span>\r\n            <CustomBtn classname=\"google\" func={signInWithGoogle}>Sign In With Google</CustomBtn>\r\n            <CustomBtn classname=\"faceBook\" func={signInWithFaceBook}>Sign In With FaceBook</CustomBtn>\r\n        </div>\r\n    );\r\n}\r\n \r\nexport default SignIn;","import { useEffect, useState } from 'react';\nimport './App.css';\nimport ChatUi from './components/chat-ui/chat-ui.component';\nimport SignIn from './components/sign-in-component/sign-in-component';\nimport { auth, createProfileDocument, firestore } from './firebase/firebase.utils';\nfunction App() {\n\n  const [user, setUser] = useState(null)\n  const [data, setData] = useState(null);\n  useEffect(() => {\n    let unsubscribe = auth.onAuthStateChanged(userAuth => {\n      if(userAuth) {\n        createProfileDocument(userAuth).then(ref => ref.onSnapshot(userSnap => {\n          setUser({\n            uid: userSnap.id,\n            ...userSnap.data()\n          })\n        }));\n        \n        const messagesDbRef = firestore.collection('messages')\n\n        messagesDbRef.orderBy('createdAt', 'asc').limitToLast(35).onSnapshot(messageList => {\n          setData(messageList.docs)\n        })\n\n\n      } else {\n        setUser(userAuth)\n      }\n    })\n\n    return () => unsubscribe();\n  }, [])\n\n  return (\n    <div className=\"App\">\n      {user && data ? <ChatUi user={user} docs={data}/> : <SignIn /> }\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}